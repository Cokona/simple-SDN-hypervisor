
# Starting topology
mininet@mininet:~$ sudo mn --topo=single,3 --controller=none --mac 

# Setting openflow version
mininet> sh ovs-vsctl set bridge s1 protocols=OpenFlow13

# Setting ip address, gateway and static arp mapping on h2
mininet> h1 ip addr flush dev h1-eth0
mininet> h1 ip addr add 192.168.0.1/24 dev h1-eth0
mininet> h1 route add default gw 192.168.0.254 h1-eth0
mininet> h1 arp -s 192.168.0.254 00:00:00:00:11:11

# Setting ip address, gateway and static arp mapping on h2
mininet> h2 ip addr flush dev h2-eth0
mininet> h2 ip addr add 192.168.0.2/24 dev h2-eth0
mininet> h2 route add default gw 192.168.0.254 h2-eth0
mininet> h2 arp -s 192.168.0.254 00:00:00:00:11:11 

# Setting ip address, gateway and static arp mapping on h3
mininet> h3 ip add flush dev h3-eth0
mininet> h3 ip addr add 10.0.0.1/24 dev h3-eth0
mininet> h3 route add default gw 10.0.0.254 h3-eth0
mininet> h3 arp -s 10.0.0.254 00:00:00:00:33:33

# Installing access control rules
mininet> sh ovs-ofctl -O OpenFlow13 add-flow s1 "table=0,priority=10,cookie=0001,dl_type=2054,nw_src=192.168.0.0/24,nw_dst=192.168.0.0/24,actions=resubmit(,1)"
mininet> sh ovs-ofctl -O OpenFlow13 add-flow s1 "table=0,priority=10,cookie=0002,dl_type=2048,nw_src=192.168.0.0/24,nw_dst=192.168.0.0/24,actions=resubmit(,1)"
mininet> sh ovs-ofctl -O OpenFlow13 add-flow s1 "table=0,priority=10,cookie=0003,dl_type=2048,nw_proto=1,nw_src=192.168.0.1,nw_dst=10.0.0.1,actions=resubmit(,1)"
mininet> sh ovs-ofctl -O OpenFlow13 add-flow s1 "table=0,priority=10,cookie=0004,dl_type=2048,nw_proto=1,nw_dst=192.168.0.1,nw_src=10.0.0.1,actions=resubmit(,1)"
mininet> sh ovs-ofctl -O OpenFlow13 add-flow s1 "table=0,priority=10,cookie=0005,dl_type=2048,nw_src=10.0.0.1,actions=resubmit(,1)"
mininet> sh ovs-ofctl -O OpenFlow13 dump-flows s1 table=0
OFPST_FLOW reply (OF1.3) (xid=0x2):
 cookie=0x5, duration=111.457s, table=0, n_packets=0, n_bytes=0, priority=10,ip,nw_src=10.0.0.1 actions=resubmit(,1)
 cookie=0x1, duration=653.129s, table=0, n_packets=0, n_bytes=0, priority=10,arp,arp_spa=192.168.0.0/24,arp_tpa=192.168.0.0/24 actions=resubmit(,1)
 cookie=0x2, duration=254.681s, table=0, n_packets=0, n_bytes=0, priority=10,ip,nw_src=192.168.0.0/24,nw_dst=192.168.0.0/24 actions=resubmit(,1)
 cookie=0x3, duration=262.081s, table=0, n_packets=0, n_bytes=0, priority=10,icmp,nw_src=192.168.0.1,nw_dst=10.0.0.1 actions=resubmit(,1)
 cookie=0x4, duration=225.905s, table=0, n_packets=0, n_bytes=0, priority=10,icmp,nw_src=10.0.0.1,nw_dst=192.168.0.1 actions=resubmit(,1)


# Installing NAT control rules
mininet> sh ovs-ofctl -O OpenFlow13 add-flow s1 "table=1,priority=10,cookie=0001,dl_type=2048,nw_src=192.168.0.1,nw_dst=10.0.0.1,actions=mod_nw_src=5.5.5.5,resubmit(,2)"
mininet> sh ovs-ofctl -O OpenFlow13 add-flow s1 "table=1,priority=10,cookie=0002,dl_type=2048,nw_dst=5.5.5.5,nw_src=10.0.0.1,actions=mod_nw_dst=192.168.0.1,resubmit(,2)"
mininet> sh ovs-ofctl -O OpenFlow13 add-flow s1 "table=1,priority=0,cookie=0003,actions=resubmit(,2)"
mininet> sh ovs-ofctl -O OpenFlow13 dump-flows s1 table=1
OFPST_FLOW reply (OF1.3) (xid=0x2):
 cookie=0x1, duration=305.272s, table=1, n_packets=0, n_bytes=0, priority=10,ip,nw_src=192.168.0.1,nw_dst=10.0.0.1 actions=mod_nw_src:5.5.5.5,resubmit(,2)
 cookie=0x2, duration=59.031s, table=1, n_packets=0, n_bytes=0, priority=10,ip,nw_src=10.0.0.1,nw_dst=5.5.5.5 actions=mod_nw_dst:192.168.0.1,resubmit(,2)
 cookie=0x3, duration=2.208s, table=1, n_packets=0, n_bytes=0, priority=0 actions=resubmit(,2)


# Installing routing rules
mininet> sh ovs-ofctl -O OpenFlow13 add-flow s1 "table=2,priority=10,cookie=0001,dl_type=2048,nw_dst=192.168.0.1,actions=mod_dl_dst=00:00:00:00:00:01,output:1"
mininet> sh ovs-ofctl -O OpenFlow13 add-flow s1 "table=2,priority=10,cookie=0002,dl_type=2048,nw_dst=192.168.0.2,actions=mod_dl_dst=00:00:00:00:00:02,output:2"
mininet> sh ovs-ofctl -O OpenFlow13 add-flow s1 "table=2,priority=10,cookie=0003,dl_type=2048,nw_dst=10.0.0.1,actions=mod_dl_dst=00:00:00:00:00:03,output:3"
mininet> sh ovs-ofctl -O OpenFlow13 add-flow s1 "table=2,priority=0,cookie=0004,dl_type=2054,nw_dst=192.168.0.1,actions=output:1"
mininet> sh ovs-ofctl -O OpenFlow13 add-flow s1 "table=2,priority=0,cookie=0005,dl_type=2054,nw_dst=192.168.0.2,actions=output:2"
mininet> sh ovs-ofctl -O OpenFlow13 add-flow s1 "table=2,priority=0,cookie=0006,dl_type=2054,nw_dst=10.0.0.1,actions=output:3"
mininet> sh ovs-ofctl -O OpenFlow13 dump-flows s1 table=2
OFPST_FLOW reply (OF1.3) (xid=0x2):
 cookie=0x4, duration=37.481s, table=2, n_packets=0, n_bytes=0, priority=0,arp,arp_tpa=192.168.0.1 actions=output:1
 cookie=0x6, duration=8.913s, table=2, n_packets=0, n_bytes=0, priority=0,arp,arp_tpa=10.0.0.1 actions=output:3
 cookie=0x5, duration=25.807s, table=2, n_packets=0, n_bytes=0, priority=0,arp,arp_tpa=192.168.0.2 actions=output:2
 cookie=0x3, duration=211.873s, table=2, n_packets=0, n_bytes=0, priority=10,ip,nw_dst=10.0.0.1 actions=mod_dl_dst:00:00:00:00:00:03,output:3
 cookie=0x1, duration=405.953s, table=2, n_packets=0, n_bytes=0, priority=10,ip,nw_dst=192.168.0.1 actions=mod_dl_dst:00:00:00:00:00:01,output:1
 cookie=0x2, duration=217.271s, table=2, n_packets=0, n_bytes=0, priority=10,ip,nw_dst=192.168.0.2 actions=mod_dl_dst:00:00:00:00:00:02,output:2


# Testing
mininet> h1 ping h2
PING 192.168.0.2 (192.168.0.2) 56(84) bytes of data.
64 bytes from 192.168.0.2: icmp_seq=1 ttl=64 time=0.559 ms
64 bytes from 192.168.0.2: icmp_seq=2 ttl=64 time=0.087 ms
^C
--- 192.168.0.2 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 999ms
rtt min/avg/max/mdev = 0.087/0.323/0.559/0.236 ms
mininet> h1 ping h3
PING 10.0.0.1 (10.0.0.1) 56(84) bytes of data.
64 bytes from 10.0.0.1: icmp_seq=1 ttl=64 time=0.676 ms
64 bytes from 10.0.0.1: icmp_seq=2 ttl=64 time=0.115 ms
^C
--- 10.0.0.1 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 999ms
rtt min/avg/max/mdev = 0.115/0.395/0.676/0.281 ms
mininet> h2 ping h3
PING 10.0.0.1 (10.0.0.1) 56(84) bytes of data.
^C
--- 10.0.0.1 ping statistics ---
2 packets transmitted, 0 received, 100% packet loss, time 1004ms

mininet> sh ovs-ofctl -O OpenFlow13 dump-flows s1
OFPST_FLOW reply (OF1.3) (xid=0x2):
 cookie=0x5, duration=2731.872s, table=0, n_packets=4, n_bytes=392, priority=10,ip,nw_src=10.0.0.1 actions=resubmit(,1)
 cookie=0x1, duration=3273.544s, table=0, n_packets=6, n_bytes=252, priority=10,arp,arp_spa=192.168.0.0/24,arp_tpa=192.168.0.0/24 actions=resubmit(,1)
 cookie=0x2, duration=2875.096s, table=0, n_packets=8, n_bytes=784, priority=10,ip,nw_src=192.168.0.0/24,nw_dst=192.168.0.0/24 actions=resubmit(,1)
 cookie=0x3, duration=2882.496s, table=0, n_packets=4, n_bytes=392, priority=10,icmp,nw_src=192.168.0.1,nw_dst=10.0.0.1 actions=resubmit(,1)
 cookie=0x4, duration=2846.32s, table=0, n_packets=0, n_bytes=0, priority=10,icmp,nw_src=10.0.0.1,nw_dst=192.168.0.1 actions=resubmit(,1)
 cookie=0x1, duration=2217.791s, table=1, n_packets=4, n_bytes=392, priority=10,ip,nw_src=192.168.0.1,nw_dst=10.0.0.1 actions=mod_nw_src:5.5.5.5,resubmit(,2)
 cookie=0x2, duration=1971.55s, table=1, n_packets=4, n_bytes=392, priority=10,ip,nw_src=10.0.0.1,nw_dst=5.5.5.5 actions=mod_nw_dst:192.168.0.1,resubmit(,2)
 cookie=0x3, duration=1914.727s, table=1, n_packets=14, n_bytes=1036, priority=0 actions=resubmit(,2)
 cookie=0x4, duration=920.232s, table=2, n_packets=3, n_bytes=126, priority=0,arp,arp_tpa=192.168.0.1 actions=output:1
 cookie=0x6, duration=891.664s, table=2, n_packets=0, n_bytes=0, priority=0,arp,arp_tpa=10.0.0.1 actions=output:3
 cookie=0x5, duration=908.558s, table=2, n_packets=3, n_bytes=126, priority=0,arp,arp_tpa=192.168.0.2 actions=output:2
 cookie=0x3, duration=1094.624s, table=2, n_packets=4, n_bytes=392, priority=10,ip,nw_dst=10.0.0.1 actions=mod_dl_dst:00:00:00:00:00:03,output:3
 cookie=0x1, duration=1288.704s, table=2, n_packets=8, n_bytes=784, priority=10,ip,nw_dst=192.168.0.1 actions=mod_dl_dst:00:00:00:00:00:01,output:1
 cookie=0x2, duration=1100.022s, table=2, n_packets=4, n_bytes=392, priority=10,ip,nw_dst=192.168.0.2 actions=mod_dl_dst:00:00:00:00:00:02,output:2

mininet> h1 ping h3
PING 10.0.0.1 (10.0.0.1) 56(84) bytes of data.
64 bytes from 10.0.0.1: icmp_seq=1 ttl=64 time=0.691 ms
64 bytes from 10.0.0.1: icmp_seq=2 ttl=64 time=0.125 ms
64 bytes from 10.0.0.1: icmp_seq=3 ttl=64 time=0.100 ms
64 bytes from 10.0.0.1: icmp_seq=4 ttl=64 time=0.129 ms

mininet@mininet:~$ sudo tcpdump -i s1-eth1
tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on s1-eth1, link-type EN10MB (Ethernet), capture size 262144 bytes
10:12:04.241906 IP 192.168.0.1 > 10.0.0.1: ICMP echo request, id 4525, seq 2, length 64
10:12:04.241991 IP 10.0.0.1 > 192.168.0.1: ICMP echo reply, id 4525, seq 2, length 64
10:12:05.245114 IP 192.168.0.1 > 10.0.0.1: ICMP echo request, id 4525, seq 3, length 64
10:12:05.245297 IP 10.0.0.1 > 192.168.0.1: ICMP echo reply, id 4525, seq 3, length 64
10:12:06.245410 IP 192.168.0.1 > 10.0.0.1: ICMP echo request, id 4525, seq 4, length 64
10:12:06.245546 IP 10.0.0.1 > 192.168.0.1: ICMP echo reply, id 4525, seq 4, length 64

mininet@mininet:~$ sudo tcpdump -i s1-eth3
[sudo] password for mininet: 
tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on s1-eth3, link-type EN10MB (Ethernet), capture size 262144 bytes
10:12:04.241952 IP 5.5.5.5 > 10.0.0.1: ICMP echo request, id 4525, seq 2, length 64
10:12:04.241984 IP 10.0.0.1 > 5.5.5.5: ICMP echo reply, id 4525, seq 2, length 64
10:12:05.245222 IP 5.5.5.5 > 10.0.0.1: ICMP echo request, id 4525, seq 3, length 64
10:12:05.245255 IP 10.0.0.1 > 5.5.5.5: ICMP echo reply, id 4525, seq 3, length 64
10:12:06.245476 IP 5.5.5.5 > 10.0.0.1: ICMP echo request, id 4525, seq 4, length 64
10:12:06.245537 IP 10.0.0.1 > 5.5.5.5: ICMP echo reply, id 4525, seq 4, length 64



# Notes:

# Forward to other table:
 actions=resubmit(in_port,table_number)  
 actions=goto_table:table_number  #OpenFlow13 only protocol must be specified -O OpenFlow13

# Set all openflow switches version from the beggining
mininet@mininet:~$ sudo mn --topo=single,3 --controller=none --mac --switch ovsk,protocols=OpenFlow13
# I don't know what is the difference between switch types ovs, ovsk?

# An incoming packet will be matched against the lower number table
# Pipeline beggins with the lowest number table

# Can I jump from a higher table to a lower one?

# References
- https://www.youtube.com/watch?v=TD5wmoD7XOE (Video explaining pretty much this activity)
- https://www.andreafortuna.org/2018/07/18/tcpdump-a-simple-cheatsheet/ (TCP dump cheatsheet)
- http://docs.openvswitch.org/en/latest/tutorials/ovs-advanced/ (OpenVSwtich advanced features)
- http://therandomsecurityguy.com/openvswitch-cheat-sheet/ (OVS cheat sheet)
- https://access.redhat.com/sites/default/files/attachments/rh_ip_command_cheatsheet_1214_jcs_print.pdf (IP command cheat sheet)
- https://en.wikipedia.org/wiki/EtherType (Ethertype list dl_type)
- https://en.wikipedia.org/wiki/List_of_IP_protocol_numbers (IP protocols list nw_proto)
- http://routing.cloud.mobilesdn.org/cheatsheet.html (List with match patterns and actions)


